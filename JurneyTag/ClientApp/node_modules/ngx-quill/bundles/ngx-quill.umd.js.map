{"version":3,"file":"ngx-quill.umd.js.map","sources":["ng://ngx-quill/src/quill-editor.component.ts","ng://ngx-quill/src/quill.module.ts"],"sourcesContent":["import { isPlatformServer } from '@angular/common'\nimport { DomSanitizer } from '@angular/platform-browser'\n\nimport { QuillConfig, QuillModules } from './quill-editor.interfaces'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator\n} from '@angular/forms'\n\nimport { DOCUMENT } from '@angular/common'\n\n// import * as QuillNamespace from 'quill'\n// Because quill uses `document` directly, we cannot `import` during SSR\n// instead, we load dynamically via `require('quill')` in `ngAfterViewInit()`\ndeclare var require: any\n// tslint:disable-next-line:variable-name\nlet Quill: any = null\n\nexport interface CustomOption {\n  import: string\n  whitelist: any[]\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => QuillEditorComponent)\n    },\n    {\n      multi: true,\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => QuillEditorComponent)\n    }\n  ],\n  selector: 'quill-editor',\n  template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n})\nexport class QuillEditorComponent\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  quillEditor: any\n  editorElem: HTMLElement\n  emptyArray: any[] = []\n  content: any\n  selectionChangeEvent: any\n  textChangeEvent: any\n  defaultModules: QuillModules | {}\n\n  onModelChange: any\n  onModelTouched: any\n\n  @Input() format: 'object' | 'html' | 'text' | 'json' = 'html'\n  @Input() theme: string\n  // tslint:disable-next-line:ban-types\n  @Input() modules: { [index: string]: Object }\n  @Input() readOnly: boolean = false\n  @Input() placeholder: string\n  @Input() maxLength: number\n  @Input() minLength: number\n  @Input() required: boolean\n  @Input() formats: string[]\n  @Input() sanitize: boolean = false\n  @Input() style: any = {}\n  @Input() strict: boolean = true\n  @Input() scrollingContainer: HTMLElement | string\n  @Input() bounds: HTMLElement | string\n  @Input() customOptions: CustomOption[] = []\n\n  @Output() onEditorCreated: EventEmitter<any> = new EventEmitter()\n  @Output() onContentChanged: EventEmitter<any> = new EventEmitter()\n  @Output() onSelectionChanged: EventEmitter<any> = new EventEmitter()\n\n  private disabled = false // used to store initial value before ViewInit\n\n  constructor(\n    private elementRef: ElementRef,\n    private domSanitizer: DomSanitizer,\n    @Inject(DOCUMENT) private doc: any,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private renderer: Renderer2,\n    private zone: NgZone,\n    @Inject('config') private config: QuillConfig\n  ) {\n    this.defaultModules = this.config && this.config.modules || {}\n  }\n\n  @Input()\n  valueGetter = (quillEditor: any, editorElement: HTMLElement): any => {\n    let html: string | null = editorElement.children[0].innerHTML\n    if (html === '<p><br></p>' || html === '<div><br><div>') {\n      html = null\n    }\n    let modelValue = html\n\n    if (this.format === 'text') {\n      modelValue = quillEditor.getText()\n    } else if (this.format === 'object') {\n      modelValue = quillEditor.getContents()\n    } else if (this.format === 'json') {\n      try {\n        modelValue = JSON.stringify(quillEditor.getContents())\n      } catch (e) {\n        modelValue = quillEditor.getText()\n      }\n    }\n\n    return modelValue\n  }\n\n  @Input()\n  valueSetter = (quillEditor: any, value: any): any => {\n    if (this.format === 'html') {\n      if (this.sanitize) {\n        value = this.domSanitizer.sanitize(SecurityContext.HTML, value)\n      }\n      return quillEditor.clipboard.convert(value)\n    } else if (this.format === 'json') {\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return [{ insert: value }]\n      }\n    }\n\n    return value\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return\n    }\n    if (!Quill) {\n      Quill = require('quill')\n    }\n\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-toolbar]'\n    )\n    const modules = this.modules || this.defaultModules\n    let placeholder = 'Insert text here ...'\n\n    if (this.placeholder !== null && this.placeholder !== undefined) {\n      placeholder = this.placeholder.trim()\n    }\n\n    if (toolbarElem) {\n      // tslint:disable-next-line:no-string-literal\n      modules['toolbar'] = toolbarElem\n    }\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      'beforeend',\n      '<div quill-editor-element></div>'\n    )\n    this.editorElem = this.elementRef.nativeElement.querySelector(\n      '[quill-editor-element]'\n    )\n\n    if (this.style) {\n      Object.keys(this.style).forEach((key: string) => {\n        this.renderer.setStyle(this.editorElem, key, this.style[key])\n      })\n    }\n\n    this.customOptions.forEach((customOption) => {\n      const newCustomOption = Quill.import(customOption.import)\n      newCustomOption.whitelist = customOption.whitelist\n      Quill.register(newCustomOption, true)\n    })\n\n    this.quillEditor = new Quill(this.editorElem, {\n      bounds: this.bounds ? (this.bounds === 'self' ? this.editorElem : this.bounds) : this.doc.body,\n      formats: this.formats,\n      modules,\n      placeholder,\n      readOnly: this.readOnly,\n      scrollingContainer: this.scrollingContainer,\n      strict: this.strict,\n      theme: this.theme || 'snow'\n    })\n\n    if (this.content) {\n      if (this.format === 'object') {\n        this.quillEditor.setContents(this.content, 'silent')\n      } else if (this.format === 'text') {\n        this.quillEditor.setText(this.content, 'silent')\n      } else if (this.format === 'json') {\n        try {\n          this.quillEditor.setContents(JSON.parse(this.content), 'silent')\n        } catch (e) {\n          this.quillEditor.setText(this.content, 'silent')\n        }\n      } else {\n        if (this.sanitize) {\n          this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content)\n        }\n        const contents = this.quillEditor.clipboard.convert(this.content)\n        this.quillEditor.setContents(contents, 'silent')\n      }\n\n      this.quillEditor.history.clear()\n    }\n\n    // initialize disabled status based on this.disabled as default value\n    this.setDisabledState()\n\n    this.onEditorCreated.emit(this.quillEditor)\n\n    // mark model as touched if editor lost focus\n    this.selectionChangeEvent = this.quillEditor.on(\n      'selection-change',\n      (range: any, oldRange: any, source: string) => {\n        this.zone.run(() => {\n          this.onSelectionChanged.emit({\n            editor: this.quillEditor,\n            oldRange,\n            range,\n            source\n          })\n\n          if (!range && this.onModelTouched) {\n            this.onModelTouched()\n          }\n        })\n      }\n    )\n\n    // update model if text changes\n    this.textChangeEvent = this.quillEditor.on(\n      'text-change',\n      (delta: any, oldDelta: any, source: string): void => {\n        // only emit changes emitted by user interactions\n\n        const text = this.quillEditor.getText()\n        const content = this.quillEditor.getContents()\n\n        let html: string | null = this.editorElem.children[0].innerHTML\n        if (html === '<p><br></p>' || html === '<div><br><div>') {\n          html = null\n        }\n\n        this.zone.run(() => {\n          if (source === 'user' && this.onModelChange) {\n            this.onModelChange(\n              this.valueGetter(this.quillEditor, this.editorElem)\n            )\n          }\n\n          this.onContentChanged.emit({\n            content,\n            delta,\n            editor: this.quillEditor,\n            html,\n            oldDelta,\n            source,\n            text\n          })\n        })\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    if (this.selectionChangeEvent) {\n      this.selectionChangeEvent.removeListener('selection-change')\n    }\n    if (this.textChangeEvent) {\n      this.textChangeEvent.removeListener('text-change')\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.quillEditor) {\n      return\n    }\n    // tslint:disable:no-string-literal\n    if (changes['readOnly']) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue)\n    }\n    if (changes['placeholder']) {\n      this.quillEditor.root.dataset.placeholder =\n        changes['placeholder'].currentValue\n    }\n    if (changes['style']) {\n      const currentStyling = changes['style'].currentValue\n      const previousStyling = changes['style'].previousValue\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach((key: string) => {\n          this.renderer.removeStyle(this.editorElem, key)\n        })\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach((key: string) => {\n          this.renderer.setStyle(this.editorElem, key, this.style[key])\n        })\n      }\n    }\n    // tslint:enable:no-string-literal\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (this.format === 'text') {\n          this.quillEditor.setText(currentValue)\n        } else {\n          this.quillEditor.setContents(\n            this.valueSetter(this.quillEditor, this.content)\n          )\n        }\n        return\n      }\n      this.quillEditor.setText('')\n    }\n  }\n\n  setDisabledState(isDisabled: boolean = this.disabled): void {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable()\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled')\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable()\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled')\n      }\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null\n    }\n\n    const err: {\n      minLengthError?: {\n        given: number\n        minLength: number\n      }\n      maxLengthError?: {\n        given: number\n        maxLength: number\n      }\n      requiredError?: { empty: boolean }\n    } = {}\n    let valid = true\n\n    const textLength = this.quillEditor.getText().trim().length\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      }\n\n      valid = false\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      }\n\n      valid = false\n    }\n\n    if (this.required && !textLength) {\n      err.requiredError = {\n        empty: true\n      }\n\n      valid = false\n    }\n\n    return valid ? null : err\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { QuillEditorComponent } from './quill-editor.component'\nimport { QuillConfig } from './quill-editor.interfaces'\n\nconst emptyArray: any[] = []\nconst defaultModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\n      { color: emptyArray.slice() },\n      { background: emptyArray.slice() }\n    ], // dropdown with defaults from theme\n    [{ font: emptyArray.slice() }],\n    [{ align: emptyArray.slice() }],\n\n    ['clean'], // remove formatting button\n\n    ['link', 'image', 'video'] // link and image, video\n  ]\n}\n\n@NgModule({\n  declarations: [\n    QuillEditorComponent\n  ],\n  exports: [QuillEditorComponent],\n  imports: [],\n  providers: [\n    {\n      provide: 'config',\n      useValue: defaultModules\n    }\n  ]\n})\nexport class QuillModule {\n  static forRoot(config?: QuillConfig): ModuleWithProviders {\n    return {\n      ngModule: QuillModule,\n      providers: [\n        {\n          provide: 'config',\n          useValue: config ||Â defaultModules\n        }\n      ]\n    }\n  }\n}\n"],"names":["EventEmitter","SecurityContext","isPlatformServer","Component","ViewEncapsulation","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","ElementRef","DomSanitizer","Inject","DOCUMENT","PLATFORM_ID","Renderer2","NgZone","Input","Output","NgModule"],"mappings":"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"}
